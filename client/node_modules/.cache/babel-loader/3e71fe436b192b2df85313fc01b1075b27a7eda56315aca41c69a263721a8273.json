{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lp107\\\\OneDrive\\\\Desktop\\\\Project\\\\client\\\\src\\\\pages\\\\GenerateQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Paper, Typography, TextField, Button, Card, CardContent, Grid, Chip, Alert, FormControl, InputLabel, Select, MenuItem, Slider, Switch, FormControlLabel, LinearProgress, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemText, ListItemIcon, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab } from '@mui/material';\nimport { AutoAwesome, ExpandMore, Add, Edit, Delete, Save, Clear, Psychology, QuestionAnswer, Category, Timer, School, Science, Computer, Business, Language, Math } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateQuestions = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n\n  // Form states\n  const [topic, setTopic] = useState('');\n  const [category, setCategory] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionTypes, setQuestionTypes] = useState({\n    multipleChoice: true,\n    trueFalse: false,\n    shortAnswer: false,\n    essay: false\n  });\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [includeExplanations, setIncludeExplanations] = useState(true);\n  const categories = [{\n    value: 'programming',\n    label: 'Programming',\n    icon: /*#__PURE__*/_jsxDEV(Computer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 57\n    }, this)\n  }, {\n    value: 'mathematics',\n    label: 'Mathematics',\n    icon: /*#__PURE__*/_jsxDEV(Math, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 57\n    }, this)\n  }, {\n    value: 'science',\n    label: 'Science',\n    icon: /*#__PURE__*/_jsxDEV(Science, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }, this)\n  }, {\n    value: 'business',\n    label: 'Business',\n    icon: /*#__PURE__*/_jsxDEV(Business, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 51\n    }, this)\n  }, {\n    value: 'language',\n    label: 'Language Arts',\n    icon: /*#__PURE__*/_jsxDEV(Language, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 56\n    }, this)\n  }, {\n    value: 'general',\n    label: 'General Knowledge',\n    icon: /*#__PURE__*/_jsxDEV(School, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 59\n    }, this)\n  }];\n  const difficultyLevels = [{\n    value: 'beginner',\n    label: 'Beginner',\n    color: 'success'\n  }, {\n    value: 'intermediate',\n    label: 'Intermediate',\n    color: 'warning'\n  }, {\n    value: 'advanced',\n    label: 'Advanced',\n    color: 'error'\n  }];\n  const handleGenerate = async () => {\n    if (!topic.trim()) {\n      alert('Please enter a topic');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Simulate AI question generation\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      const mockQuestions = Array.from({\n        length: questionCount\n      }, (_, index) => ({\n        id: index + 1,\n        question: `Sample question ${index + 1} about ${topic}?`,\n        type: 'multiple-choice',\n        options: ['Option A - Correct answer', 'Option B - Incorrect', 'Option C - Incorrect', 'Option D - Incorrect'],\n        correctAnswer: 0,\n        explanation: `This is the explanation for question ${index + 1} about ${topic}.`,\n        difficulty: difficulty,\n        category: category,\n        points: difficulty === 'beginner' ? 1 : difficulty === 'intermediate' ? 2 : 3\n      }));\n      setGeneratedQuestions(mockQuestions);\n      setActiveTab(1); // Switch to results tab\n    } catch (error) {\n      console.error('Failed to generate questions:', error);\n      alert('Failed to generate questions. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveQuestions = async () => {\n    try {\n      // Save questions to database\n      console.log('Saving questions:', generatedQuestions);\n      alert('Questions saved successfully!');\n      navigate('/questions');\n    } catch (error) {\n      console.error('Failed to save questions:', error);\n      alert('Failed to save questions. Please try again.');\n    }\n  };\n  const handleEditQuestion = questionId => {\n    // Edit question logic\n    console.log('Edit question:', questionId);\n  };\n  const handleDeleteQuestion = questionId => {\n    setGeneratedQuestions(prev => prev.filter(q => q.id !== questionId));\n  };\n  const TabPanel = ({\n    children,\n    value,\n    index\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [/*#__PURE__*/_jsxDEV(AutoAwesome, {\n          sx: {\n            mr: 2,\n            verticalAlign: 'middle'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), \"AI Question Generator\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Generate intelligent questions using AI based on your topic and requirements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: (e, newValue) => setActiveTab(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Generate Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: `Generated Questions (${generatedQuestions.length})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Question Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Topic/Subject\",\n                      placeholder: \"e.g., JavaScript ES6 Features, Calculus Derivatives, World War II\",\n                      value: topic,\n                      onChange: e => setTopic(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        children: \"Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        value: category,\n                        onChange: e => setCategory(e.target.value),\n                        label: \"Category\",\n                        children: categories.map(cat => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: cat.value,\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              alignItems: 'center'\n                            },\n                            children: [cat.icon, /*#__PURE__*/_jsxDEV(Typography, {\n                              sx: {\n                                ml: 1\n                              },\n                              children: cat.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 31\n                          }, this)\n                        }, cat.value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        children: \"Difficulty Level\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        value: difficulty,\n                        onChange: e => setDifficulty(e.target.value),\n                        label: \"Difficulty Level\",\n                        children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: level.value,\n                          children: /*#__PURE__*/_jsxDEV(Chip, {\n                            label: level.label,\n                            color: level.color,\n                            size: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 31\n                          }, this)\n                        }, level.value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      children: [\"Number of Questions: \", questionCount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                      value: questionCount,\n                      onChange: (e, newValue) => setQuestionCount(newValue),\n                      min: 1,\n                      max: 20,\n                      marks: true,\n                      valueLabelDisplay: \"auto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      gutterBottom: true,\n                      children: \"Question Types\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        md: 3,\n                        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            checked: questionTypes.multipleChoice,\n                            onChange: e => setQuestionTypes(prev => ({\n                              ...prev,\n                              multipleChoice: e.target.checked\n                            }))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 261,\n                            columnNumber: 31\n                          }, this),\n                          label: \"Multiple Choice\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        md: 3,\n                        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            checked: questionTypes.trueFalse,\n                            onChange: e => setQuestionTypes(prev => ({\n                              ...prev,\n                              trueFalse: e.target.checked\n                            }))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 275,\n                            columnNumber: 31\n                          }, this),\n                          label: \"True/False\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        md: 3,\n                        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            checked: questionTypes.shortAnswer,\n                            onChange: e => setQuestionTypes(prev => ({\n                              ...prev,\n                              shortAnswer: e.target.checked\n                            }))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 289,\n                            columnNumber: 31\n                          }, this),\n                          label: \"Short Answer\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        md: 3,\n                        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Switch, {\n                            checked: questionTypes.essay,\n                            onChange: e => setQuestionTypes(prev => ({\n                              ...prev,\n                              essay: e.target.checked\n                            }))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 31\n                          }, this),\n                          label: \"Essay\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 301,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      multiline: true,\n                      rows: 4,\n                      label: \"Custom Instructions (Optional)\",\n                      placeholder: \"Add any specific requirements or context for question generation...\",\n                      value: customPrompt,\n                      onChange: e => setCustomPrompt(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: includeExplanations,\n                        onChange: e => setIncludeExplanations(e.target.checked)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 27\n                      }, this),\n                      label: \"Include explanations for correct answers\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 3,\n                    display: 'flex',\n                    gap: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"large\",\n                    startIcon: /*#__PURE__*/_jsxDEV(AutoAwesome, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 34\n                    }, this),\n                    onClick: handleGenerate,\n                    disabled: loading || !topic.trim(),\n                    children: loading ? 'Generating...' : 'Generate Questions'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    startIcon: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 34\n                    }, this),\n                    onClick: () => {\n                      setTopic('');\n                      setCategory('');\n                      setCustomPrompt('');\n                      setGeneratedQuestions([]);\n                    },\n                    children: \"Clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1,\n                      textAlign: 'center'\n                    },\n                    children: \"AI is generating your questions...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: [/*#__PURE__*/_jsxDEV(Psychology, {\n                    sx: {\n                      mr: 1,\n                      verticalAlign: 'middle'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this), \"AI Features\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(QuestionAnswer, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"Smart Question Generation\",\n                      secondary: \"AI creates relevant questions based on your topic\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Category, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"Automatic Categorization\",\n                      secondary: \"Questions are automatically tagged and categorized\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Timer, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"Difficulty Adjustment\",\n                      secondary: \"Questions adapt to your selected difficulty level\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  sx: {\n                    mt: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pro Tip:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 23\n                    }, this), \" Be specific with your topic for better question quality. Example: \\\"React Hooks useEffect\\\" instead of just \\\"React\\\".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 1,\n        children: generatedQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Generated Questions (\", generatedQuestions.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 30\n              }, this),\n              onClick: handleSaveQuestions,\n              children: \"Save All Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), generatedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 49\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    flexGrow: 1\n                  },\n                  children: [\"Question \", index + 1, \": \", question.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    mr: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    label: question.difficulty,\n                    color: question.difficulty === 'beginner' ? 'success' : question.difficulty === 'intermediate' ? 'warning' : 'error',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `${question.points} pts`,\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"Question:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      mb: 2\n                    },\n                    children: question.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"Options:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(List, {\n                    dense: true,\n                    children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n                      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: `${String.fromCharCode(65 + optIndex)}. ${option}`,\n                        sx: {\n                          color: optIndex === question.correctAnswer ? 'success.main' : 'inherit'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 31\n                      }, this)\n                    }, optIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 25\n                  }, this), question.explanation && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      gutterBottom: true,\n                      children: \"Explanation:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: question.explanation\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 40\n                      }, this),\n                      onClick: () => handleEditQuestion(question.id),\n                      size: \"small\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 40\n                      }, this),\n                      color: \"error\",\n                      onClick: () => handleDeleteQuestion(question.id),\n                      size: \"small\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(AutoAwesome, {\n            sx: {\n              fontSize: 64,\n              color: 'text.disabled',\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: \"No questions generated yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 3\n            },\n            children: \"Use the \\\"Generate Questions\\\" tab to create AI-powered questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setActiveTab(0),\n            children: \"Start Generating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateQuestions, \"uUFevyTQ7fIwVK0JSfxGWFahpLk=\", false, function () {\n  return [useNavigate];\n});\n_c = GenerateQuestions;\nexport default GenerateQuestions;\nvar _c;\n$RefreshReg$(_c, \"GenerateQuestions\");","map":{"version":3,"names":["React","useState","Box","Container","Paper","Typography","TextField","Button","Card","CardContent","Grid","Chip","Alert","FormControl","InputLabel","Select","MenuItem","Slider","Switch","FormControlLabel","LinearProgress","Accordion","AccordionSummary","AccordionDetails","List","ListItem","ListItemText","ListItemIcon","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","AutoAwesome","ExpandMore","Add","Edit","Delete","Save","Clear","Psychology","QuestionAnswer","Category","Timer","School","Science","Computer","Business","Language","Math","useNavigate","jsxDEV","_jsxDEV","GenerateQuestions","_s","navigate","activeTab","setActiveTab","loading","setLoading","generatedQuestions","setGeneratedQuestions","topic","setTopic","category","setCategory","difficulty","setDifficulty","questionCount","setQuestionCount","questionTypes","setQuestionTypes","multipleChoice","trueFalse","shortAnswer","essay","customPrompt","setCustomPrompt","includeExplanations","setIncludeExplanations","categories","value","label","icon","fileName","_jsxFileName","lineNumber","columnNumber","difficultyLevels","color","handleGenerate","trim","alert","Promise","resolve","setTimeout","mockQuestions","Array","from","length","_","index","id","question","type","options","correctAnswer","explanation","points","error","console","handleSaveQuestions","log","handleEditQuestion","questionId","handleDeleteQuestion","prev","filter","q","TabPanel","children","role","hidden","sx","py","maxWidth","mb","variant","gutterBottom","mr","verticalAlign","width","borderBottom","borderColor","onChange","e","newValue","container","spacing","item","xs","md","fullWidth","placeholder","target","required","map","cat","display","alignItems","ml","level","size","min","max","marks","valueLabelDisplay","control","checked","multiline","rows","mt","gap","startIcon","onClick","disabled","textAlign","primary","secondary","severity","justifyContent","expandIcon","flexGrow","dense","option","optIndex","String","fromCharCode","flexDirection","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/lp107/OneDrive/Desktop/Project/client/src/pages/GenerateQuestions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Chip,\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Slider,\r\n  Switch,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport {\r\n  AutoAwesome,\r\n  ExpandMore,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  Save,\r\n  Clear,\r\n  Psychology,\r\n  QuestionAnswer,\r\n  Category,\r\n  Timer,\r\n  School,\r\n  Science,\r\n  Computer,\r\n  Business,\r\n  Language,\r\n  Math\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GenerateQuestions = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\r\n  \r\n  // Form states\r\n  const [topic, setTopic] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [difficulty, setDifficulty] = useState('medium');\r\n  const [questionCount, setQuestionCount] = useState(5);\r\n  const [questionTypes, setQuestionTypes] = useState({\r\n    multipleChoice: true,\r\n    trueFalse: false,\r\n    shortAnswer: false,\r\n    essay: false\r\n  });\r\n  const [customPrompt, setCustomPrompt] = useState('');\r\n  const [includeExplanations, setIncludeExplanations] = useState(true);\r\n\r\n  const categories = [\r\n    { value: 'programming', label: 'Programming', icon: <Computer /> },\r\n    { value: 'mathematics', label: 'Mathematics', icon: <Math /> },\r\n    { value: 'science', label: 'Science', icon: <Science /> },\r\n    { value: 'business', label: 'Business', icon: <Business /> },\r\n    { value: 'language', label: 'Language Arts', icon: <Language /> },\r\n    { value: 'general', label: 'General Knowledge', icon: <School /> }\r\n  ];\r\n\r\n  const difficultyLevels = [\r\n    { value: 'beginner', label: 'Beginner', color: 'success' },\r\n    { value: 'intermediate', label: 'Intermediate', color: 'warning' },\r\n    { value: 'advanced', label: 'Advanced', color: 'error' }\r\n  ];\r\n\r\n  const handleGenerate = async () => {\r\n    if (!topic.trim()) {\r\n      alert('Please enter a topic');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Simulate AI question generation\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n      \r\n      const mockQuestions = Array.from({ length: questionCount }, (_, index) => ({\r\n        id: index + 1,\r\n        question: `Sample question ${index + 1} about ${topic}?`,\r\n        type: 'multiple-choice',\r\n        options: [\r\n          'Option A - Correct answer',\r\n          'Option B - Incorrect',\r\n          'Option C - Incorrect', \r\n          'Option D - Incorrect'\r\n        ],\r\n        correctAnswer: 0,\r\n        explanation: `This is the explanation for question ${index + 1} about ${topic}.`,\r\n        difficulty: difficulty,\r\n        category: category,\r\n        points: difficulty === 'beginner' ? 1 : difficulty === 'intermediate' ? 2 : 3\r\n      }));\r\n      \r\n      setGeneratedQuestions(mockQuestions);\r\n      setActiveTab(1); // Switch to results tab\r\n    } catch (error) {\r\n      console.error('Failed to generate questions:', error);\r\n      alert('Failed to generate questions. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveQuestions = async () => {\r\n    try {\r\n      // Save questions to database\r\n      console.log('Saving questions:', generatedQuestions);\r\n      alert('Questions saved successfully!');\r\n      navigate('/questions');\r\n    } catch (error) {\r\n      console.error('Failed to save questions:', error);\r\n      alert('Failed to save questions. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditQuestion = (questionId) => {\r\n    // Edit question logic\r\n    console.log('Edit question:', questionId);\r\n  };\r\n\r\n  const handleDeleteQuestion = (questionId) => {\r\n    setGeneratedQuestions(prev => prev.filter(q => q.id !== questionId));\r\n  };\r\n\r\n  const TabPanel = ({ children, value, index }) => (\r\n    <div role=\"tabpanel\" hidden={value !== index}>\r\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {/* Header */}\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <AutoAwesome sx={{ mr: 2, verticalAlign: 'middle' }} />\r\n          AI Question Generator\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Generate intelligent questions using AI based on your topic and requirements\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Paper sx={{ width: '100%' }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\r\n            <Tab label=\"Generate Questions\" />\r\n            <Tab label={`Generated Questions (${generatedQuestions.length})`} />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Generate Tab */}\r\n        <TabPanel value={activeTab} index={0}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={8}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Question Parameters\r\n                  </Typography>\r\n\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Topic/Subject\"\r\n                        placeholder=\"e.g., JavaScript ES6 Features, Calculus Derivatives, World War II\"\r\n                        value={topic}\r\n                        onChange={(e) => setTopic(e.target.value)}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                          value={category}\r\n                          onChange={(e) => setCategory(e.target.value)}\r\n                          label=\"Category\"\r\n                        >\r\n                          {categories.map((cat) => (\r\n                            <MenuItem key={cat.value} value={cat.value}>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                {cat.icon}\r\n                                <Typography sx={{ ml: 1 }}>{cat.label}</Typography>\r\n                              </Box>\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel>Difficulty Level</InputLabel>\r\n                        <Select\r\n                          value={difficulty}\r\n                          onChange={(e) => setDifficulty(e.target.value)}\r\n                          label=\"Difficulty Level\"\r\n                        >\r\n                          {difficultyLevels.map((level) => (\r\n                            <MenuItem key={level.value} value={level.value}>\r\n                              <Chip label={level.label} color={level.color} size=\"small\" />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Typography gutterBottom>\r\n                        Number of Questions: {questionCount}\r\n                      </Typography>\r\n                      <Slider\r\n                        value={questionCount}\r\n                        onChange={(e, newValue) => setQuestionCount(newValue)}\r\n                        min={1}\r\n                        max={20}\r\n                        marks\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Question Types\r\n                      </Typography>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={6} md={3}>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={questionTypes.multipleChoice}\r\n                                onChange={(e) => setQuestionTypes(prev => ({\r\n                                  ...prev,\r\n                                  multipleChoice: e.target.checked\r\n                                }))}\r\n                              />\r\n                            }\r\n                            label=\"Multiple Choice\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={questionTypes.trueFalse}\r\n                                onChange={(e) => setQuestionTypes(prev => ({\r\n                                  ...prev,\r\n                                  trueFalse: e.target.checked\r\n                                }))}\r\n                              />\r\n                            }\r\n                            label=\"True/False\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={questionTypes.shortAnswer}\r\n                                onChange={(e) => setQuestionTypes(prev => ({\r\n                                  ...prev,\r\n                                  shortAnswer: e.target.checked\r\n                                }))}\r\n                              />\r\n                            }\r\n                            label=\"Short Answer\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={3}>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={questionTypes.essay}\r\n                                onChange={(e) => setQuestionTypes(prev => ({\r\n                                  ...prev,\r\n                                  essay: e.target.checked\r\n                                }))}\r\n                              />\r\n                            }\r\n                            label=\"Essay\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Custom Instructions (Optional)\"\r\n                        placeholder=\"Add any specific requirements or context for question generation...\"\r\n                        value={customPrompt}\r\n                        onChange={(e) => setCustomPrompt(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={includeExplanations}\r\n                            onChange={(e) => setIncludeExplanations(e.target.checked)}\r\n                          />\r\n                        }\r\n                        label=\"Include explanations for correct answers\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Box sx={{ mt: 3, display: 'flex', gap: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"large\"\r\n                      startIcon={<AutoAwesome />}\r\n                      onClick={handleGenerate}\r\n                      disabled={loading || !topic.trim()}\r\n                    >\r\n                      {loading ? 'Generating...' : 'Generate Questions'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<Clear />}\r\n                      onClick={() => {\r\n                        setTopic('');\r\n                        setCategory('');\r\n                        setCustomPrompt('');\r\n                        setGeneratedQuestions([]);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </Box>\r\n\r\n                  {loading && (\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <LinearProgress />\r\n                      <Typography variant=\"body2\" sx={{ mt: 1, textAlign: 'center' }}>\r\n                        AI is generating your questions...\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    <Psychology sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                    AI Features\r\n                  </Typography>\r\n                  \r\n                  <List>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        <QuestionAnswer color=\"primary\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        primary=\"Smart Question Generation\"\r\n                        secondary=\"AI creates relevant questions based on your topic\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        <Category color=\"primary\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        primary=\"Automatic Categorization\"\r\n                        secondary=\"Questions are automatically tagged and categorized\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        <Timer color=\"primary\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        primary=\"Difficulty Adjustment\"\r\n                        secondary=\"Questions adapt to your selected difficulty level\"\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n\r\n                  <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Pro Tip:</strong> Be specific with your topic for better question quality. \r\n                      Example: \"React Hooks useEffect\" instead of just \"React\".\r\n                    </Typography>\r\n                  </Alert>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        {/* Generated Questions Tab */}\r\n        <TabPanel value={activeTab} index={1}>\r\n          {generatedQuestions.length > 0 ? (\r\n            <Box>\r\n              <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography variant=\"h6\">\r\n                  Generated Questions ({generatedQuestions.length})\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<Save />}\r\n                  onClick={handleSaveQuestions}\r\n                >\r\n                  Save All Questions\r\n                </Button>\r\n              </Box>\r\n\r\n              {generatedQuestions.map((question, index) => (\r\n                <Accordion key={question.id} sx={{ mb: 2 }}>\r\n                  <AccordionSummary expandIcon={<ExpandMore />}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                      <Typography sx={{ flexGrow: 1 }}>\r\n                        Question {index + 1}: {question.question}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', gap: 1, mr: 2 }}>\r\n                        <Chip\r\n                          label={question.difficulty}\r\n                          color={\r\n                            question.difficulty === 'beginner' ? 'success' :\r\n                            question.difficulty === 'intermediate' ? 'warning' : 'error'\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip label={`${question.points} pts`} size=\"small\" />\r\n                      </Box>\r\n                    </Box>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                          Question:\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                          {question.question}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                          Options:\r\n                        </Typography>\r\n                        <List dense>\r\n                          {question.options.map((option, optIndex) => (\r\n                            <ListItem key={optIndex}>\r\n                              <ListItemText\r\n                                primary={`${String.fromCharCode(65 + optIndex)}. ${option}`}\r\n                                sx={{\r\n                                  color: optIndex === question.correctAnswer ? 'success.main' : 'inherit'\r\n                                }}\r\n                              />\r\n                            </ListItem>\r\n                          ))}\r\n                        </List>\r\n\r\n                        {question.explanation && (\r\n                          <Box sx={{ mt: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>\r\n                              Explanation:\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              {question.explanation}\r\n                            </Typography>\r\n                          </Box>\r\n                        )}\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12} md={4}>\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                          <Button\r\n                            startIcon={<Edit />}\r\n                            onClick={() => handleEditQuestion(question.id)}\r\n                            size=\"small\"\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            startIcon={<Delete />}\r\n                            color=\"error\"\r\n                            onClick={() => handleDeleteQuestion(question.id)}\r\n                            size=\"small\"\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ textAlign: 'center', py: 8 }}>\r\n              <AutoAwesome sx={{ fontSize: 64, color: 'text.disabled', mb: 2 }} />\r\n              <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n                No questions generated yet\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                Use the \"Generate Questions\" tab to create AI-powered questions\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => setActiveTab(0)}\r\n              >\r\n                Start Generating\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </TabPanel>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GenerateQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}